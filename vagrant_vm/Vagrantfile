# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.


$script = <<SCRIPT
      echo "deb http://ppa.launchpad.net/ansible/ansible/ubuntu trusty main > /etc/apt/sources.list.d/ansible.list"
	  sudo apt-get -y update
	  sudo apt-get install -y ansible dbus
	  #sudo sed -i -e "\\#PasswordAuthentication yes# s!#PasswordAuthentication yes!PasswordAuthentication yes!g s#PasswordAuthentication yes#PasswordAuthentication no#g" /etc/ssh/sshd_config
      sudo service ssh restart
SCRIPT

Vagrant.configure(2) do |config|
	config.vm.provider "virtualbox" do |v|
	  v.memory = 2048
	  v.cpus = 2
	end



     config.vm.define "sinker" do |sinker|
	  sinker.vm.box = "kaorimatz/debian-8.3-amd64"
	  sinker.vm.network "private_network", ip: "192.168.33.10"
	  sinker.vm.provision "shell", inline: $script
	  sinker.ssh.insert_key = false
      sinker.ssh.private_key_path = ["/home/fsero/.ssh/id_dsa", "/home/fsero/.ssh/id_rsa", "~/.vagrant.d/insecure_private_key"]
      #sinker.ssh.port = 30009
      sinker.vm.provision "file", source: "/home/fsero/.ssh/id_dsa.pub", destination: "~/.ssh/authorized_keys"
      sinker.vm.provision "file", source: "/home/fsero/.ssh/id_rsa.pub", destination: "~/.ssh/authorized_keys"

   	end
	config.vm.define "main" do |main|
	   main.vm.provider :virtualbox do |vb|
          vb.customize ["modifyvm", :id, "--memory", "8096"]
          vb.customize ["modifyvm", :id, "--cpus", "2"]
      end
	  main.vm.network "forwarded_port", guest: 5601, host: 35601
	  main.vm.network "forwarded_port", guest: 9200, host: 39200
	  main.vm.network "forwarded_port", guest: 38080, host: 38080
          main.vm.box = "kaorimatz/debian-8.3-amd64"
	  #main.ssh.port = 30009
	  main.vm.network "private_network", ip: "192.168.33.11"
	  main.vm.provision "shell", inline: $script
	  main.ssh.insert_key = false
      main.ssh.private_key_path = ["/home/fsero/.ssh/id_dsa", "/home/fsero/.ssh/id_rsa", "~/.vagrant.d/insecure_private_key"]
      main.vm.provision "file", source: "/home/fsero/.ssh/id_dsa.pub", destination: "~/.ssh/authorized_keys"
      main.vm.provision "file", source: "/home/fsero/.ssh/id_rsa.pub", destination: "~/.ssh/authorized_keys"
  	main.vm.synced_folder "/home/fsero/data/es", "/var/backups/es"

	end
	config.vm.define "pki" do |pki|
    	  pki.vm.box = "kaorimatz/debian-8.3-amd64"
    	  #pki.ssh.port = 30009
    	  pki.vm.network "private_network", ip: "192.168.33.12"
    	  pki.vm.provision "shell", inline: $script
    	  pki.ssh.insert_key = false
          pki.ssh.private_key_path = ["/home/fsero/.ssh/id_dsa", "/home/fsero/.ssh/id_rsa", "~/.vagrant.d/insecure_private_key"]
          pki.vm.provision "file", source: "/home/fsero/.ssh/id_dsa.pub", destination: "~/.ssh/authorized_keys"
          pki.vm.provision "file", source: "/home/fsero/.ssh/id_rsa.pub", destination: "~/.ssh/authorized_keys"
    end
end
